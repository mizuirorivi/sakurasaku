{"version":3,"sources":["apis/getRating.tsx","components/UI.tsx","App.tsx","apis/getPath.tsx","reportWebVitals.ts","index.tsx"],"names":["endpoint","getRating","url","a","axios","post","data","console","log","MainUI","props","className","rating","App","useQueryClient","path","window","location","href","split","useState","setRating","useQuery","ratingFetching","isFetching","_ratingData","remove","areFetching","useEffect","score","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"uRAGMA,EAAmB,kBAGZC,EAAS,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACAC,IAAMC,KAAN,UAClBL,EADkB,6BACWE,IAFX,uBACfI,EADe,EACfA,KAIRC,QAAQC,IAAR,UAAeR,EAAf,6BAA4CE,IALrB,kBAOhBI,GAPgB,2CAAH,sD,OCUPG,EAhBA,SAACC,GAEZ,OACI,qCACI,wDACA,0GACA,sBAAKC,UAAU,YAAf,UACI,+HACmB,IAAlBD,EAAME,OACD,mCAAMF,EAAME,OAAZ,aACA,uDCwDPC,EArDY,WAILC,cAApB,IACIC,EChBSC,OAAOC,SAASC,KACZC,MAAM,KAAK,GDUG,EAQHC,oBAAe,GARZ,mBAQxBR,EARwB,KAQhBS,EARgB,OASTD,mBAAiB,IATR,mBASxBlB,EATwB,aAYiDoB,YAC9E,aAAa,kBAAMrB,EAAUC,OADXqB,EAZW,EAYvBC,WAAkCC,EAZX,EAYKnB,KAZL,EAYwBoB,OAIvDnB,QAAQC,IAAIO,GAMZ,IAAIY,EACFJ,IAAkB,EAsBpB,OApBAK,qBAAU,WAEJD,GACJF,GAAeJ,EAAUI,EAAYI,SAEpC,CAACN,IAgBF,sBAAKZ,UAAU,eAAf,UACE,cAAC,EAAD,CAAQC,OAAQV,GAAe,KAARA,EAAaU,GAAU,IAC7CG,ME/CQe,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCARQ,EAAc,IAAIC,IAExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAqBC,OAAQN,EAA7B,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,SAG1BjB,M","file":"static/js/main.10603198.chunk.js","sourcesContent":["import axios, { AxiosResponse } from 'axios'\nimport { LOADIPHLPAPI } from 'node:dns'\nimport { isPropertySignature } from 'typescript'\nconst endpoint: string = 'localhost:8080/'\n\n// URLを渡してレーティングデータを取得　\nexport const getRating = async (url: string) => {\n  const { data } = await axios.post<any>(\n    `${endpoint}api/url2score?url=${url}`\n  )\n\n  console.log(`${endpoint}api/url2score?url=${url}`);\n  \n  return data\n}\n","const MainUI = (props: any) => {\n\n    return (\n        <>\n            <h1>sakurasaku🌸</h1>\n            <h3>良質なamazon商品を即時判断！</h3>\n            <div className=\"container\">\n                <h3> この商品のレーティングは・・・ </h3>\n                {props.rating !== -1\n                    ? <h3> {props.rating} / 5.0 </h3>\n                    : <>FETCHING</>}\n            </div>\n        </>\n    )\n}\n\nexport default MainUI","import { useState, useEffect } from 'react'\n// React Query\nimport { useQuery, useQueryClient } from 'react-query'\n// data fetch apis\nimport {\n  getRating,\n  \n} from 'apis/getRating'\nimport { getVisitingHistory } from 'apis/getPath'\n\n// IMPORTING COMPONENTS\nimport MainUI from \"components/UI\"\n\nconst App: React.FC<any> = () => {\n\n  /******** consts ********/\n  // Access the client\n  const queryClient = useQueryClient()\n  let path: any = getVisitingHistory()\n\n  /******** States ********/\n  const [rating, setRating] = useState<any>(-1) // rating data\n  const [url, setUrl] = useState<string>('') // product url\n\n  /******** dataFetching ********/\n  const { isFetching: ratingFetching, data: _ratingData, remove: ratingRemove } = useQuery(\n    'getRating', () => getRating(url)\n  )\n    \n  console.log(path);\n  \n  \n\n  /******** useEffect ********/\n\n  let areFetching =\n    ratingFetching || false\n\n  useEffect(() => {\n\n    if (areFetching) return\n    _ratingData && setRating(_ratingData.score)\n\n  }, [ratingFetching])\n\n  // useEffect(() => {\n  //   // of location changed\n  //   setUrl(path)\n  //   ratingRemove()\n\n  // }, [path])\n\n  /******** methods ********/\n\n  const methods = {\n  }\n\n  /******** JSX ********/\n  return (\n    <div className=\"AppContainer\">\n      <MainUI rating={url && url !== '' ? rating : -1} />\n      {path}\n    </div>\n  )\n}\n\nexport default App","\nexport const getVisitingHistory = (): any => {\n  const href = window.location.href\n  const url = href.split('?')[0]\n\n  return url\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// React Query\nimport { QueryClient, QueryClientProvider } from 'react-query'\nimport './index.scss';\nimport './reset.scss';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\n\nconst queryClient = new QueryClient()   // Create a client\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}